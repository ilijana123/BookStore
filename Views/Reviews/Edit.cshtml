@using Microsoft.AspNetCore.Identity
@using MVCBookk.Areas.Identity.Data
@inject UserManager<MVCBookkUser> UserManager

@model MVCBookk.Models.Review

@{
    ViewData["Title"] = "Edit";
}
<style>
    /* Center the form */
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    /* Style the form */
    .form-container {
        width: 600px;
        padding: 40px;
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    /* Style form fields */
    .form-group {
        margin-bottom: 30px;
    }

    .control-label {
        font-weight: bold;
    }

    .form-control {
        width: 100%;
        padding: 15px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    /* Style buttons */
    .btn-primary,
    .btn-dark {
        width: 100%;
        padding: 15px;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
    }

    .btn-dark {
        background-color: #343a40;
        color: white;
        border: none;
    }

    /* Validation error message */
    .text-danger {
        color: #dc3545;
    }
</style>

<div class="container">
    <div class="form-container">
        <h1>Edit</h1>
        <hr />
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <!-- Assuming you want to hide the label displaying the AppUser's email -->
                <label asp-for="AppUser" class="control-label hidden">AppUser Email</label>
                <input asp-for="AppUser" class="form-control" hidden />
                <input type="text" class="form-control" value="@UserManager.FindByIdAsync(Model.AppUser).Result.Email" readonly />
            </div>
            <div class="form-group">
                <label asp-for="BookId" class="control-label"></label>
                <select asp-for="BookId" class="form-control" asp-items="ViewBag.BookId"></select>
                <span asp-validation-for="BookId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Comment" class="control-label">Comment:</label>
                <input asp-for="Comment" class="form-control" />
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Rating" class="control-label">Rating:</label>
                <input asp-for="Rating" class="form-control" />
                <span asp-validation-for="Rating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-dark">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
