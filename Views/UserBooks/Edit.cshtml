@using Microsoft.AspNetCore.Identity
@using MVCBookk.Areas.Identity.Data
@inject UserManager<MVCBookkUser> UserManager

@model MVCBookk.Models.UserBooks

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>UserBooks</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="BookId" class="control-label"></label>
                <select asp-for="BookId" class="form-control" asp-items="ViewBag.BookId"></select>
                <span asp-validation-for="BookId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">AppUser Email</label>
                <input type="text" class="form-control" value="@UserManager.FindByIdAsync(Model.AppUser).Result.Email" readonly />
            </div>
            <!-- Add a hidden input to store the AppUser ID, so it's posted back -->
            <input type="hidden" asp-for="AppUser" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary btn-block" />
                <a class="btn btn-danger btn-block" asp-action="Index" asp-route-id="@Model?.Id">Back to List</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}